version: "3.9"

services:
  db:
    image: postgres:16.1
    container_name: smastnx_desafio_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - dbdata:/var/lib/postgresql/data

  # Init container: cria o DB de testes se nÃ£o existir
  db-init:
    image: postgres:16.1
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-lc"]
    command: >
      '
      PGPASSWORD=${DB_PASS} psql -h db -U ${DB_USER} -d postgres -tAc
      "SELECT 1 FROM pg_database WHERE datname = '\''${DB_NAME}_test'\''"
      | grep -q 1
      || PGPASSWORD=${DB_PASS} psql -h db -U ${DB_USER} -d postgres -c
      "CREATE DATABASE ${DB_NAME}_test OWNER ${DB_USER};"
      '

  mongo:
    image: mongo:8
    container_name: smastnx_desafio_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodata:/data/db

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: smastnx_desafio_mongo_express
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASS}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASS}@mongo:27017/?authSource=admin
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"

volumes:
  dbdata:
  mongodata:
